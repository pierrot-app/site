"use strict";var precacheConfig=[["/index.html","14bf1c207c679a08b790a96e84bb8bfd"],["/static/js/main.93377e8e.js","a7f69ce4d04203e8230245e1ad4b5bf3"],["/static/media/Hero-Background.f0325845.svg","f03258456bf24b9ab69da036232c04ef"],["/static/media/Hero.e6088abf.png","e6088abf52f2da6bdfb010060be1a9e5"],["/static/media/Highlight.eb609755.png","eb60975539cb73863193fa31eaabe098"],["/static/media/HowTo-1.ec2567db.png","ec2567dbbaa41111dd5c20adda2fec8f"],["/static/media/HowTo-2.8bb26c72.png","8bb26c72d1cdc5d96453c72652d7c1b3"],["/static/media/HowTo-3.db87f99a.png","db87f99ae6fa8bf16db2c55fe9de522a"],["/static/media/HowTo-Background-1.cf50a1dd.svg","cf50a1dd07b24d4d0b9a92b82605f63f"],["/static/media/HowTo-Background-2.556879d3.svg","556879d37d09e2fba74ca7e0e84c487f"],["/static/media/HowTo-Background-3.839886c1.svg","839886c107f214d38123b1e08880b1aa"],["/static/media/Logo-Texte.15fb307a.svg","15fb307a658e4f234790f3288ef92f3d"],["/static/media/comp1.328e1437.scss","328e14378d8f7b409e8079a4e28c68d5"],["/static/media/comp2.f6cfd612.scss","f6cfd6122e8e853938985f30b271734d"],["/static/media/email-input.db55bd4d.scss","db55bd4dfd4fddd8e02bcd61e5b8be8c"],["/static/media/footer.7beda677.scss","7beda677e3b4cfb3e9ff2ea22bc68e49"],["/static/media/home.4b13704a.scss","4b13704abecee588c146ca9afe5da7e8"],["/static/media/index.6cc2defa.scss","6cc2defaca3a3c409f47078de5ad247f"],["/static/media/intro.5416d09a.scss","5416d09a25ba4a9e582b19d6b455e25d"],["/static/media/xw-button.a8809860.scss","a8809860d6f9cd20867831694fd733be"],["/static/media/xw-image.2ba4e0d3.scss","2ba4e0d343847d4c30cde57c71bad793"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});